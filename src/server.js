import express from 'express';
import { GoogleGenerativeAI } from '@google/generative-ai';
import * as dotenv from 'dotenv';
import cors from 'cors';

dotenv.config();

const app = express();
const PORT = 3000;
const apiKey = process.env.GEMINI_API_KEY;

if (!apiKey) {
    console.error("Missing GEMINI_API_KEY in .env file.");
    process.exit(1);
}

const genAI = new GoogleGenerativeAI(apiKey);

app.use(cors());
app.use(express.json());

app.post('/generateContent', async (req, res) => {
    const { prompt } = req.body;
    if (!prompt) return res.status(400).json({ error: 'Missing "prompt".' });

    try {
        console.log("Processing prompt...");

        const model = genAI.getGenerativeModel({ model: 'gemini-2.0-flash' });
        const result = await model.generateContent(prompt);
        const generatedText = result.response.candidates?.[0]?.content?.parts?.[0]?.text || '';

        if (!generatedText) throw new Error("No text generated by model.");

        res.json({ generatedText });
    } catch (err) {
        console.error("Gemini API Error:", err);
        res.status(500).json({ error: 'Failed to generate content.', details: err.message });
    }
});

app.listen(PORT, () => {
    console.log(`Backend running at http://localhost:${PORT}`);
});
